# include /etc/nginx/conf.d/default.ssl;

# SSL
http2 on;

ssl_certificate /cert/fullchain.pem;
ssl_certificate_key /cert/private.key;

ssl_session_timeout 1d;
ssl_session_cache shared:MozSSL:10m; # about 40000 sessions
ssl_session_tickets on; # TLS会话恢复(Ticket), 0-RTT 支持需要

# https://ssl-config.mozilla.org intermediate configuration
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
ssl_prefer_server_ciphers off;

# HSTS (ngx_http_headers_module is required) (63072000 seconds)
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

# quic
#quic_retry                on; # 启用 QUIC 的地址验证，但这与下方的 0-RTT 支持存在冲突
quic_gso on; # 启用通用分段卸载 (Generic Segmentation Offloading)，提高 QUIC 性能
ssl_early_data on; # 启用 TLS 1.3 的 0-RTT 功能，允许客户端在初次握手后立即发送数据
proxy_set_header Early-Data $ssl_early_data; # 将 Early-Data 头部传递给后端服务器，通知其接收到的可能是 0-RTT 数据
add_header Alt-Svc 'h3=":$server_port"; ma=2592000'; #添加 Alt-Svc 头部来协商 HTTP/3
add_header X-protocol $server_protocol always; # 添加自定义头部，显示服务器使用的协议版本